LOG:  database system was shut down at 2012-04-15 14:48:49 PDT
LOG:  autovacuum launcher started
LOG:  database system is ready to accept connections
FATAL:  database "user_admin_development" does not exist
FATAL:  database "user_admin_development" does not exist
LOG:  received fast shutdown request
LOG:  aborting any active transactions
LOG:  autovacuum launcher shutting down
LOG:  shutting down
LOG:  database system is shut down
LOG:  database system was shut down at 2012-04-15 15:04:52 PDT
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
LOG:  received fast shutdown request
LOG:  aborting any active transactions
LOG:  autovacuum launcher shutting down
LOG:  shutting down
LOG:  database system is shut down
LOG:  database system was shut down at 2012-04-15 23:18:37 PDT
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
FATAL:  role "postgres" does not exist
ERROR:  function byteaout(text) does not exist at character 420
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
STATEMENT:  SELECT n.nspname AS schema, 		 p.proname AS name, 		 p.proargtypes AS params, 		 p.prorettype AS ret, 		 prosrc AS definition, 		 COALESCE(lanname,'') AS lang, 		 p.proisstrict AS strict, 		 CASE WHEN p.provolatile = 'i' THEN 'IMMUTABLE' 			  WHEN p.provolatile = 's' THEN 'STABLE' 			  ELSE 'VOLATILE' END AS volatile, 		p.prosecdef AS securitydefiner, 		p.proretset AS returnset, 		COALESCE(u.usename,'') AS owner, 		byteaout(p.probin) as obj_file, 		obj_description(p.oid) AS comment, 		p.proacl, 		(p.oid <= d.datlastsysoid) AS systable, 		p.oid, 		typns.nspname as rettypeschema		, p.proargnames AS paramnames, p.proargmodes AS parammodes, p.proallargtypes AS paramalltypes, p.procost AS estimcost, p.prorows AS estimrows, p.proconfig AS configparams, pg_get_expr(p.proargdefaults,'pg_proc'::regclass) AS defaultvalues FROM	pg_proc p JOIN	pg_namespace n ON p.pronamespace = n.oid LEFT JOIN pg_language l ON p.prolang = l.oid LEFT JOIN pg_user u ON p.proowner = u.usesysid LEFT JOIN pg_database d on d.datname = current_database() LEFT JOIN pg_type typ on typ.oid = p.prorettype LEFT JOIN pg_namespace typns ON typns.oid = typ.typnamespace WHERE	p.proisagg = 'f' 		AND p.prorettype <> 'trigger'::regtype 		AND n.nspname = 'public'
ERROR:  function byteaout(text) does not exist at character 420
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
STATEMENT:  SELECT n.nspname AS schema, 		 p.proname AS name, 		 p.proargtypes AS params, 		 p.prorettype AS ret, 		 prosrc AS definition, 		 COALESCE(lanname,'') AS lang, 		 p.proisstrict AS strict, 		 CASE WHEN p.provolatile = 'i' THEN 'IMMUTABLE' 			  WHEN p.provolatile = 's' THEN 'STABLE' 			  ELSE 'VOLATILE' END AS volatile, 		p.prosecdef AS securitydefiner, 		p.proretset AS returnset, 		COALESCE(u.usename,'') AS owner, 		byteaout(p.probin) as obj_file, 		obj_description(p.oid) AS comment, 		p.proacl, 		(p.oid <= d.datlastsysoid) AS systable, 		p.oid, 		typns.nspname as rettypeschema		, p.proargnames AS paramnames, p.proargmodes AS parammodes, p.proallargtypes AS paramalltypes, p.procost AS estimcost, p.prorows AS estimrows, p.proconfig AS configparams, pg_get_expr(p.proargdefaults,'pg_proc'::regclass) AS defaultvalues FROM	pg_proc p JOIN	pg_namespace n ON p.pronamespace = n.oid LEFT JOIN pg_language l ON p.prolang = l.oid LEFT JOIN pg_user u ON p.proowner = u.usesysid LEFT JOIN pg_database d on d.datname = current_database() LEFT JOIN pg_type typ on typ.oid = p.prorettype LEFT JOIN pg_namespace typns ON typns.oid = typ.typnamespace WHERE	p.proisagg = 'f' 		AND p.prorettype <> 'trigger'::regtype 		AND n.nspname = 'public'
LOG:  received fast shutdown request
LOG:  aborting any active transactions
FATAL:  terminating connection due to administrator command
FATAL:  terminating connection due to administrator command
LOG:  autovacuum launcher shutting down
LOG:  shutting down
LOG:  database system is shut down
LOG:  database system was shut down at 2012-04-16 18:56:17 PDT
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
ERROR:  column t.tgisconstraint does not exist at character 1946
STATEMENT:  SELECT t.oid, (current_database())::information_schema.sql_identifier AS trigger_catalog, (n.nspname)::information_schema.sql_identifier AS trigger_schema, (t.tgname)::information_schema.sql_identifier AS trigger_name, (c.relname)::information_schema.sql_identifier AS trigger_table_name, (array_to_string( (CASE WHEN (((t.tgtype)::integer & 4) <> 0) THEN ARRAY['INSERT'] ELSE '{}'::text[] END) || (CASE WHEN (((t.tgtype)::integer & 8) <> 0) THEN ARRAY['DELETE'] ELSE '{}'::text[] END) || (CASE WHEN (((t.tgtype)::integer & 16) <> 0) THEN ARRAY['UPDATE'] ELSE '{}'::text[] END) , ' OR '))::information_schema.character_data AS event_manipulations, (current_database())::information_schema.sql_identifier AS event_object_catalog, (n.nspname)::information_schema.sql_identifier AS event_object_schema, (c.relname)::information_schema.sql_identifier AS event_object_table, (NULL::information_schema.cardinal_number)::information_schema.cardinal_number AS action_order, (NULL::information_schema.character_data)::information_schema.character_data AS action_condition, ("substring"(pg_get_triggerdef(t.oid), ("position"("substring"(pg_get_triggerdef(t.oid), 48), 'EXECUTE PROCEDURE'::text) + 47)))::information_schema.character_data AS action_statement, (CASE WHEN (((t.tgtype)::integer & 1) = 1) THEN 'ROW'::text ELSE 'STATEMENT'::text END)::information_schema.character_data AS action_orientation, (CASE WHEN (((t.tgtype)::integer & 2) = 2) THEN 'BEFORE'::text ELSE 'AFTER'::text END)::information_schema.character_data AS condition_timing, (NULL::information_schema.sql_identifier)::information_schema.sql_identifier AS condition_reference_old_table, (NULL::information_schema.sql_identifier)::information_schema.sql_identifier AS condition_reference_new_table, obj_description(t.oid) AS comment FROM pg_namespace n, pg_class c, pg_trigger t, pg_user u WHERE (n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (c.relowner = u.usesysid) AND (NOT t.tgisconstraint) AND n.nspname = 'public' AND c.relname = 'testme'
ERROR:  null value in column "id" violates not-null constraint
STATEMENT:  insert into "public"."testme" ( "name") values ( 'foo')
ERROR:  cannot drop a template database
STATEMENT:  DROP DATABASE IF EXISTS "template1"
ERROR:  cannot drop a template database
STATEMENT:  DROP DATABASE IF EXISTS "template1"
